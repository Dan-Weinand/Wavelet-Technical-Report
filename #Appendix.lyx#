#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass spie
\use_default_options false
\master TechReportAMALTHEA.lyx
\maintain_unincluded_children false
\language english
\language_package none
\inputencoding auto
\fontencoding default
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 0
\use_mathdots 0
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
\start_of_appendix
Orthogonality of resolutions under arbitrary scaling
\begin_inset CommandInset label
LatexCommand label
name "sec:Orthogonality-of-arbitrary"

\end_inset


\end_layout

\begin_layout Standard
We wish to prove that if two basis functions subject to the dyadic wavelet
 transform with resolution levels 
\begin_inset Formula $j_{1},j_{2}\in\mathbb{Z}$
\end_inset

 are orthogonal across integer translates, then those functions with new
 resolution levels 
\begin_inset Formula $j_{1}+m,j_{2}+m$
\end_inset

 (where 
\begin_inset Formula $m\in\mathbb{R}$
\end_inset

) are as well.
 Let 
\begin_inset Formula $\varphi$
\end_inset

 be considered interchangeable for either the father and mother wavelet
 function.
 From the orthogonality of the functions, we have
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
0 & =\left\langle \varphi_{j_{1},k_{1}},\varphi_{j_{2},k_{2}}\right\rangle ,\forall k\in\mathbb{Z}\\
 & =\int_{\mathbb{R}}\varphi_{j_{1},k_{1}}(x)\varphi_{j_{2},k_{2}}(x)dx\\
 & =\int_{\mathbb{R}}2^{j_{1}/2}\varphi(2^{j_{1}}x-k_{1})2^{j_{2}/2}\varphi(2^{j_{2}}x-k_{2})dx\\
 & =2^{\frac{j_{1}+j_{2}}{2}}\int_{\mathbb{R}}\varphi(2^{j_{1}}x-k_{1})\varphi(2^{j_{2}}x-k_{2})dx
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Now we have a change of variable where 
\begin_inset Formula $t=2^{-m}x$
\end_inset

 so that
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
 & =2^{m+\frac{j_{1}+j_{2}}{2}}\int_{\mathbb{R}}\varphi(2^{j_{1}+m}t-k_{1})\varphi(2^{j_{2}+m}t-k_{2})dt\\
 & =2^{m+\frac{j_{1}+j_{2}}{2}}2^{-m-\frac{j_{1}+j_{2}}{2}}\left\langle \varphi_{j_{1}+m,k_{1}}\varphi_{j_{2}+m,k_{2}}\right\rangle \\
 & =\left\langle \varphi_{j_{1}+m,k_{1}}\varphi_{j_{2}+m,k_{2}}\right\rangle 
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
From this we see that the orthogonality of the functions is maintained so
 long as we only use integer translations and scaling factors.
 This lets us select any arbitrary real value as our starting resolution
 
\begin_inset Formula $j_{0}$
\end_inset

 so long as the stopping level 
\begin_inset Formula $J$
\end_inset

 is an integer distance 
\end_layout

\begin_layout Section
Original data and processing
\end_layout

\begin_layout Subsection
Stock price versus volume
\end_layout

\begin_layout Standard
Original data comes from the historical stock data set on 
\begin_inset CommandInset href
LatexCommand href
name "Quant Quote"
target "https://quantquote.com/historical-stock-data"

\end_inset

 on June 9th, 2014.
 The raw data contained the following variables: the Date, Ticker (which
 comes from the file name), Open, High, Low, Close, Volume for the day.
 We use the 50 stocks with most complete information in the Quant Quote
 set (completeness was decided by the size of the data file for the company).
 Since this selects for companies which lasted the roughly 14 year period,
 survivorship bias is a potential source of error in our subsequent analyses.
 In order to process the raw data, move the Quant Quote folder (unzipped)
 into your working directory in R.
 Next, use the script normalizeManyStocks.R in order to normalize all stock
 prices to have a mean of 0 and standard deviation of 1.
 The time invariant relationship between trading volume and price change
 is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Overall-Trading-Volume"

\end_inset

.
 The final variables are explained below.
 
\end_layout

\begin_layout Itemize
Date: the date to which the observation corresponds 
\end_layout

\begin_layout Itemize
HighPercentChange: the percent change of the highest price that day versus
 its opening price
\end_layout

\begin_layout Itemize
LowPercentChange: the percent change of the low price that day versus its
 opening price 
\end_layout

\begin_layout Itemize
ClosePercentChange: the percent change of the close price that day versus
 its opening price 
\end_layout

\begin_layout Itemize
Variability: HighPercentChange â€“ LowPercentChange.
 The percent fluctuation range for the stock that day.
 
\end_layout

\begin_layout Itemize
NormVolume: the residual of the logarithm of the volume of stock traded
 versus the date
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/VolVPrice.png
	lyxscale 70
	scale 70

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Overall Trading Volume against Price Change
\begin_inset CommandInset label
LatexCommand label
name "fig:Overall-Trading-Volume"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Options trading volume versus put/call ratio
\end_layout

\begin_layout Standard
The data originally comes from the 
\begin_inset CommandInset href
LatexCommand href
name "CBOE"
target "www.cboe.com/publish/ScheduledTask/MktData/datahouse/totalpc.csv"

\end_inset

 Total Exchange Volume and Put/Call Ratios accessed on June 30th.
 The raw data contains the following variables: Date, Put volume, Call volume,
 total volume, and put/call ratio.
 Cleaning the data began with removing the first two rows from the data
 file.
 After this, the script normalizeOptions was run from R.
 The script normalizes all variables to have a mean of zero and standard
 deviation of 1.
 The time invariant relationship between the option trading volume and the
 put/call ratio is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Overall-Option-Volume"

\end_inset

.
 The final variables used are explained below
\end_layout

\begin_layout Itemize
Date: the date to which the observation corresponds 
\end_layout

\begin_layout Itemize
Puts: the total number of puts sold on the market that day 
\end_layout

\begin_layout Itemize
Calls: the total number of calls sold on the market that day 
\end_layout

\begin_layout Itemize
LogP.C.Ratio: the natural logarithm of the number of puts over the number
 of calls
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/OptionVRatio.png
	lyxscale 70
	scale 80

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Overall Option Volume against Put/Call Ratio 
\begin_inset CommandInset label
LatexCommand label
name "fig:Overall-Option-Volume"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Data processing scripts
\end_layout

\begin_layout Standard
All of the following scripts were writtin in the R programming language.
\end_layout

\begin_layout Subsection
normalizeStocks.R
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

library(data.table) 
\end_layout

\begin_layout Plain Layout

#Load in the raw stock data file NormData <- fread(paste("quantquote_daily_sp500
_83986
\backslash

\backslash
daily
\backslash

\backslash
table_", tickerName, ".csv", sep = ''))
\end_layout

\begin_layout Plain Layout

setnames(x = NormData, old = c("V1", "V2", "V3", "V4", "V5", "V6", "V7"),
\end_layout

\begin_layout Plain Layout

         new = c("Date", "Ticker", "Open", "High", "Low", "Close", "Volume"))
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# Normalize the high, low, and close based on the open price 
\end_layout

\begin_layout Plain Layout

# Subtract one to center the data about 0 
\end_layout

\begin_layout Plain Layout

NormData$High <- NormData$High/NormData$Open - 1 
\end_layout

\begin_layout Plain Layout

NormData$Low <- NormData$Low/NormData$Open - 1 
\end_layout

\begin_layout Plain Layout

NormData$Close <- NormData$Close/NormData$Open - 1
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# Remove the open price as it would always be 1 when normalized 
\end_layout

\begin_layout Plain Layout

NormData$Open <- NULL
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# Remove the ticker as it is always 0 in this data set 
\end_layout

\begin_layout Plain Layout

NormData$Ticker <- NULL
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# Format dates as the data type date 
\end_layout

\begin_layout Plain Layout

NormData$Date <- as.character(NormData$Date) 
\end_layout

\begin_layout Plain Layout

NormData$Date <- as.Date(NormData$Date, "%Y%m%d")
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# Add the variability of the stock, the high minus the low 
\end_layout

\begin_layout Plain Layout

NormData$Variability <- (NormData$High - NormData$Low)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# Take log of volume since it increases exponentially over time 
\end_layout

\begin_layout Plain Layout

NormData$Volume <- log(NormData$Volume)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# Fit an exponential model of volume versus time 
\end_layout

\begin_layout Plain Layout

volVtime <- lm(NormData$Volume ~ NormData$Date) NormData$Volume <- resid(volVtim
e)
\end_layout

\begin_layout Plain Layout

remove(volVtime)
\end_layout

\begin_layout Plain Layout

# Normalize volume and close price about their mean & st.
 dev NormData$Volume <-(NormData$Volume - mean(NormData$Volume))/ sd(NormData$Vo
lume) NormData$Close <-(NormData$Close - mean(NormData$Close))/ sd(NormData$Clos
e)
\end_layout

\begin_layout Plain Layout

setnames(x = NormData, old = c("Date", "High", "Low", "Close",         
                        "Volume", "Variability"),          new = c("Date",
 "HighPercentChange", "LowPercentChange",                   "ClosePercentChange"
, "NormVolume", "Variability"))
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_body
\end_document
